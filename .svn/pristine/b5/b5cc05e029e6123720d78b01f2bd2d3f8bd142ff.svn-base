<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eMotion.team.board.dao.IBoardDAO">

    <!-- 총 게시글 수 조회 -->
	<select id="getTotalRowCount" resultType="int" parameterType="map">
	    SELECT COUNT(*) 
	    FROM BOARD 
	    WHERE BODELYN = 'N' 
	    <if test="searchWord != null and searchWord != ''">
	        AND BOTITLE LIKE '%' || #{searchWord} || '%'
	    </if>
	</select>

    <!-- 게시글 리스트 조회 -->
    <select id="getBoardList" resultType="BoardVO" parameterType="BoardSearchVO">
	    SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, b.*
	        FROM (
	            SELECT 
	                bo.boNo, 
	                bo.boTitle, 
	                bo.email, 
	                m.nickname, -- 닉네임 추가
	                bo.boContent, 
	                bo.boHit, 
	                bo.boRecommend,
	                bo.boComment,
	                bo.boRegDate, 
	                bo.boDelYn, 
	                bo.cateNo,
	                c.cateNm
	            FROM 
	                board bo
	            LEFT JOIN 
	                boardcategory c ON bo.cateNo = c.cateNo
	            LEFT JOIN 
	                member m ON bo.email = m.email
	            WHERE 
	                bo.boDelYn = 'N'
	            <if test="searchWord != null and searchWord != ''">
	                AND bo.boTitle LIKE '%' || #{searchWord} || '%'
	            </if>
	            ORDER BY 
	                bo.boNo DESC
	        ) b
	    )
	    WHERE rnum BETWEEN #{firstRow} AND #{lastRow}
	</select>
	
	<!-- 게시글 상세  -->
    <select id="getBoard" resultType="BoardVO" parameterType="int">
	    SELECT 
	        bo.boNo, 
	        bo.boTitle, 
	        bo.email, 
	        m.nickname,
	        m.profileImg,
	        bo.boContent, 
	        bo.boHit, 
	        bo.boRecommend,
	        bo.boComment,
	        bo.boRegDate, 
	        bo.boModDate, 
	        bo.boDelYn, 
	        bo.cateNo,
	        c.cateNm
	    FROM 
	        board bo
	    LEFT JOIN 
	        boardcategory c ON bo.cateNo = c.cateNo
	    LEFT JOIN 
	        member m ON bo.email = m.email
	    WHERE 
	        bo.boNo = #{boNo}
	        AND bo.boDelYn = 'N'
	</select>

    <!-- 게시글 등록 -->
    <insert id="insertBoard" parameterType="BoardVO">
        INSERT INTO BOARD (
            BONO, BOTITLE, EMAIL, BOCONTENT, BOHIT, BORECOMMEND, BOCOMMENT, BOREGDATE, BODELYN, CATENO
        )
        VALUES (
            SEQ_BOARD.NEXTVAL, #{boTitle}, #{email}, #{boContent}, 0, 0, 0, SYSDATE, 'N', #{cateNo}
        )
    </insert>

    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="BoardVO">
        UPDATE BOARD
        SET BOTITLE = #{boTitle},
            BOCONTENT = #{boContent},
            CATENO = #{cateNo},
            BOMODDATE = SYSDATE
        WHERE BONO = #{boNo}
        AND BODELYN = 'N'
    </update>

    <!-- 게시글 삭제 -->
    <update id="deleteBoard" parameterType="int">
        UPDATE BOARD
        SET BODELYN = 'Y'
        WHERE BONO = #{boNo}
    </update>

    <!-- 조회수 증가 -->
	<update id="increaseHit" parameterType="int">
	    UPDATE board
	    SET boHit = NVL(boHit, 0) + 1
	    WHERE boNo = #{boNo}
	</update>
	
	<!-- 중복 추천 여부 확인 -->
	<select id="hasUserRecommended" resultType="boolean" parameterType="map">
	    SELECT COUNT(*)
	    FROM likeboard
	    WHERE boNo = #{boNo} AND email = #{email}
	</select>
	
	<!-- 추천 추가 -->
	<insert id="addRecommend" parameterType="map">
	    INSERT INTO likeboard (boNo, email, likeRegDate)
	    VALUES (#{boNo}, #{email}, SYSDATE)
	</insert>
	
	<!-- 추천 제거 -->
	<delete id="removeRecommend" parameterType="map">
	    DELETE FROM likeboard
	    WHERE boNo = #{boNo} AND email = #{email}
	</delete>
	
	<!-- 추천 수 갱신 -->
	<update id="updateRecommendCount" parameterType="int">
	    UPDATE board
	    SET boRecommend = (SELECT COUNT(*) FROM likeboard WHERE boNo = #{boNo})
	    WHERE boNo = #{boNo}
	</update>
	
		<!-- 이전 게시글 가져오기 -->
		<select id="getPrevPost" parameterType="int" resultType="BoardVO">
		    SELECT * 
		    FROM (
		        SELECT * 
		        FROM board 
		        WHERE boNo &lt; #{boNo} 
		        ORDER BY boNo DESC
		    )
		    WHERE ROWNUM = 1
		</select>

		<!-- 다음 게시글 가져오기 -->
		<select id="getNextPost" parameterType="int" resultType="BoardVO">
		    SELECT * 
		    FROM (
		        SELECT * 
		        FROM board 
		        WHERE boNo &gt; #{boNo} 
		        ORDER BY boNo ASC
		    )
		    WHERE ROWNUM = 1
		</select>
	
	<select id="getCommentsByBoardNo" parameterType="int" resultType="CommentVO">
    SELECT *
    FROM comment
    WHERE boNo = #{boNo}
    ORDER BY comment_date ASC
	</select>
	
</mapper>
