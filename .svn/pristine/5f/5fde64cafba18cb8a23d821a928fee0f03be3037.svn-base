package com.eMotion.team.board.service;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.eMotion.team.board.dao.IBoardDAO;
import com.eMotion.team.board.vo.BoardSearchVO;
import com.eMotion.team.board.vo.BoardVO;
import com.eMotion.team.member.dao.IMemberDAO;

@Service
public class BoardServiceImpl implements BoardService {

    @Autowired
    private IBoardDAO boardDAO;

    @Override
    public int getTotalRowCount(BoardSearchVO searchVO) {
        return boardDAO.getTotalRowCount(searchVO);
    }

    @Override
    public List<BoardVO> getBoardList(BoardSearchVO searchVO) {
        return boardDAO.getBoardList(searchVO);
    }

    @Override
    public BoardVO getBoard(int boNo) {
        return boardDAO.getBoard(boNo);
    }

    @Override
    public void insertBoard(BoardVO boardVO) {
        boardDAO.insertBoard(boardVO);
    }

    @Override
    public void updateBoard(BoardVO boardVO) {
        boardDAO.updateBoard(boardVO);
    }

    @Override
    public void deleteBoard(int boNo) {
        boardDAO.deleteBoard(boNo);
    }

    @Override
    public void increaseHit(int boNo) {
        boardDAO.increaseHit(boNo);
    }
    
    @Override
    public void toggleRecommend(int boNo, String email) {
        if (boardDAO.hasUserRecommended(boNo, email)) {
            // 이미 추천한 경우 -> 추천 취소
            boardDAO.removeRecommend(boNo, email);
        } else {
            // 추천하지 않은 경우 -> 추천 추가
            boardDAO.addRecommend(boNo, email);
        }
        // 추천 수 동기화
        boardDAO.updateRecommendCount(boNo);
    }

    @Override
    public void updateRecommendCount(int boNo) {
        boardDAO.updateRecommendCount(boNo);
    }

    @Override
    public BoardVO getPrevPost(int boNo) {
        return boardDAO.getPrevPost(boNo);
    }

    @Override
    public BoardVO getNextPost(int boNo) {
        return boardDAO.getNextPost(boNo);
    }

	@Override
	public Object getComments(int boNo) {
		return boardDAO.getCommentsByBoardNo(boNo);
	}
	
	@Override
	public boolean isBoardWriter(int boNo, String email) {
	    BoardVO board = boardDAO.getBoard(boNo);
	    return board.getEmail().equals(email);
	}
}