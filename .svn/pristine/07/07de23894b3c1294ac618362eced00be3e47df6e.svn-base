	<%
		/* ================================================================= 
		 * 작성일     : 2024. 12. 16. 
		 * 작성자     : 철규
		 * 상세설명  : 회원가입
		 * 화면ID : 
		 * ================================================================= 
		 * 수정일         작성자             내용      
		 * ----------------------------------------------------------------------- 
		 * 
		 * ================================================================= 
		 */
	%>
	<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
	<%@ page language="java" contentType="text/html; charset=UTF-8"
		pageEncoding="UTF-8"%>
	<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
	<!DOCTYPE html>
	<html lang="en">
	
	<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Routine</title>
	<!-- 부트스트랩 CSS -->
	<link
		href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
		rel="stylesheet">
	<!-- 부트스트랩 JS -->
	<script
		src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<style>
	.headcss {
		box-shadow: 0px 5px 0px 0px #d6edff;
	}
	
	.btn-primary {
		background-color: #50B0FF;
		border: none;
	}
	
	.btn-primary:hover {
		background-color: #37a1f8;
	}
	
	.btn.responsive-text {
		font-size: calc(0.8rem + 0.4vw);
		font-weight: 600;
		/* 화면 너비에 비례한 폰트 크기 */
	}
	
	.responsive-text {
		font-size: calc(1rem + 0.5vw);
		/* 화면 너비에 비례한 폰트 크기 */
	}
	
	.responsive-subtext {
		font-size: calc(1rem + 0.5vw);
		font-weight: 600;
		color: #604616;
		/* 화면 너비에 비례한 폰트 크기 */
	}
	
	.responsive-tabletext {
		font-size: calc(0.6rem + 0.5vw);
	}
	
	.responsive-input {
		font-size: calc(1rem + 0.5vw);
		height: 7vh;
		/* 화면 너비에 비례한 폰트 크기 */
	}
	
	.re_logo {
		font-size: calc(2.5rem + 0.5vw);
		/* 화면 너비에 비례한 폰트 크기 */
		font-weight: 1000;
	}
	
	.re_sm_logo {
		font-size: calc(1rem + 0.5vw);
		/* 화면 너비에 비례한 폰트 크기 */
		font-weight: 600;
		color: #828282;
	}
	
	.re_exp {
		font-size: calc(1rem + 0.5vw);
		/* 화면 너비에 비례한 폰트 크기 */
		font-weight: 1000;
		text-align: center;
	}
	
	.container-sm {
		height: 100%;
	}
	
	html, body {
		height: 100%;
	}
	
	body {
		display: flex;
		justify-content: center;
		background-color: #B7B7B7;
	}
	
	.cont:-webkit-scrollbar {
		display: none;
	}
	
	.cont {
		background-color: white;
		width: 768px;
		height: 100%;
		box-shadow: 0 5px 8px rgba(57, 57, 57, 0.16), 0 5px 8px
			rgba(57, 57, 57, 0.16);
		-ms-overflow-style: none;
		/* 인터넷 익스플로러 */
		scrollbar-width: none;
		/* 파이어폭스 */
	}
	
	.hidden {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
	
	.liststyle {
		background-color: #d6edff;
		border-radius: 10px;
		cursor: pointer;
		transition-duration: 0.2s;
	}
	
	.liststyle:hover {
		transform: scale(0.99);
	}
	
	.img-size {
		width: 100%;
	}
	</style>
	
	</head>
	
	<body>
	
		<div class="cont p-3 overflow-y-auto">
	
			<div class="headcss p-3 mb-4">
	
	
				<div>
					<!-- 제목 -->
					<span><span class="re_logo" style="color: #FFD050;">e</span><span
						class="re_logo" style="color: #50B0FF;">Motion</span></span> <span
						class="re_sm_logo"> 루틴</span>
				</div>
	
			</div>
			<div class="maincss px-2 d-flex justify-content-end">
				<!-- 버튼 -->
				<button class=" btn btn-primary responsive-text p-2"
					onclick="location.href='${pageContext.request.contextPath}/routineDetail'">+
					루틴 추가</button>
			</div>
	
			<!--전기차 테이블-->
			<div class="maincss p-2">
				<c:if test="${not empty routineList}">
					<c:forEach var="routine" items="${routineList}">
						<ul style="list-style: none; padding-left: 0px;">
	
							<li
								class="d-flex justify-content-between liststyle fs-4 my-2 py-2 px-3"
								data-bs-toggle="modal"
								data-bs-target="#exampleModal${routine.routineNo}"><span>${routine.rouTitle}</span>
								<span>(${routine.rouDetail})</span> <span>(${routine.createDt})</span></li>
						</ul>
	
	
						<div class="modal fade" id="exampleModal${routine.routineNo}"
							tabindex="-1" aria-labelledby="exampleModalLabel"
							aria-hidden="true">
							<div class="modal-dialog modal-md">
								<div class="modal-content p-4">
									<div class="maincss px-2">
										<div class="row d-flex justify-content-end my-2">
											<button type="button" class="btn-close align-self-center"
												data-bs-dismiss="modal" aria-label="Close"></button>
										</div>
										<div class="row d-flex align-items-stretch text-align">
											<h2>나의 루틴</h2>
											<span>${routine.routineNo}번 게시글</span> <span>${routine.rouTitle}
												(${routine.rouDetail})</span> <span>${routine.rouDay}일 운행</span>
	
											<div class="col p-3 ">
												<button class="btn btn-primary my-2 w-100">내연기관</button>
	
												<div>
													<c:forEach var="gascar" items="${GascarList}">
														<!-- routineNo와 carName이 일치하는지 확인 -->
														<c:if
															test="${routine.routineNo == gascar.routineNo && routine.gasCar == gascar.carName}">
	
															<div class="row img-container">
																<img class="img-size" src="${gascar.carImg}">
															</div>
															<div class="row">
																<p>브랜드 : ${gascar.carBrand}</p>
																<p>이름 : ${gascar.carName}</p>
																<p>종류 : ${gascar.carCate}(${gascar.carCateDetail})</p>
																<p>연비 : ${gascar.carEff}</p>
																<p>탄소배출량 : ${gascar.carCo2}</p>
																
															</div>
														</c:if>
													</c:forEach>
												</div>
											</div>
	
											<div class="col p-3">
												<button class="btn btn-primary my-2 w-100">전기차</button>
												<div>
													<c:forEach var="eleccar" items="${EleccarList}">
														<!-- routineNo와 carName이 일치하는지 확인 -->
														<c:if
															test="${routine.routineNo == eleccar.routineNo && routine.eleCar == eleccar.carname}">
															<div class="row img-container">
																<img class="img-size"
																	src="/assets/img/elec_car_img/${eleccar.imgUrl}">
															</div>
															<div class="row">
																<p>브랜드 : ${eleccar.carbrand}</p>
																<p>이름 : ${eleccar.carname}(${eleccar.carprice})</p>
																<p>종류 : ${eleccar.carcate}(${eleccar.carcatedetail})</p>
																<p>연비 : ${eleccar.carEff}(${eleccar.carMpge})</p>
																<p>탄소배출량 : ${eleccar.carCo2}</p>
															</div>
														</c:if>
	
													</c:forEach>
	
												</div>
											</div>
											<canvas id="fuelEfficiencyChart${routine.routineNo}" width="400" height="200"></canvas>
											<canvas id="fuelCo2Chart${routine.routineNo}" width="400" height="200"></canvas>
											<button class="btn btn-warning w-100" style="color:white;"
												onclick="location.href='${pageContext.request.contextPath}/routineDetailRewrite'">수정</button>
										</div>
									</div>
								</div>
							</div>
						</div>
	
					</c:forEach>
	
	
	
	
	
	
	
	
	
				</c:if>
	
				<c:if test="${empty routineList}">
					<li class="liststyle fs-4 my-2 p-2"><span>루틴이없습니다</span></li>
				</c:if>
	
			</div>
	
	
		</div>
	<script>
	document.addEventListner("DOMContentLoaded", function (){
		 <c:forEach var="routine" items="${routineList}">
	        <c:forEach var="gascar" items="${GascarList}">
	        <c:if test="${routine.routineNo == gascar.routineNo && routine.gasCar == gascar.carName}">
        	var gasCarImg = ${gascar.carImg}
            var gasCarEff = ${gascar.carEff}; // 내연기관 차의 연비
            var gasCarCo2 = ${gascar.carCo2}; // 내연기관 차의 연비
            var gasCarBrand = ${gascar.carBrand} // 내연기관차의 브랜드
            var gasCarName = ${gascar.carName} // 내연기관차의 이름
            var gasCarCate = ${gascar.carCate} // 내연기관차종
            var gascarCateDetail = ${gascar.carCateDetail} // 내연기관차종 디테일
        </c:if>

	        </c:forEach>

	        <c:forEach var="eleccar" items="${EleccarList}">
	        <c:if test="${routine.routineNo == eleccar.routineNo && routine.eleCar == eleccar.carname}">
        	var eleCarImg = ${eleccar.imgUrl}
            var eleCarEff = ${eleccar.carEff}; // 전기차 연비
            var eleCarCo2 = ${eleccar.carCo2}; // 전기차 연비
            var eleCarMpge = ${eleccar.carMpge} // 전기차  환산 연비
        	var eleCarbrand = ${eleccar.carbrand}
			var eleCarName = ${eleccar.carname}
			var eleCarPrice = ${eleccar.carprice}
			var eleCarCate = ${eleccar.carcate}
			var eleCarDetail = $(${eleccar.carcatedetail}

        </c:if>

	        </c:forEach>
	        
	        
	        
	        
	        
	        </c:forEach>
	});
	
	
	
	</script>
		<script>
document.addEventListener("DOMContentLoaded", function () {
    // 루틴 목록을 순회하며 각 차트를 생성
    <c:forEach var="routine" items="${routineList}">
        <c:forEach var="gascar" items="${GascarList}">
            <c:if test="${routine.routineNo == gascar.routineNo && routine.gasCar == gascar.carName}">
                var gasCarEff = ${gascar.carEff}; // 내연기관 차의 연비
                var gasCarCo2 = ${gascar.carCo2}; // 내연기관 차의 연비
            </c:if>
        </c:forEach>

        <c:forEach var="eleccar" items="${EleccarList}">
            <c:if test="${routine.routineNo == eleccar.routineNo && routine.eleCar == eleccar.carname}">
                var eleCarEff = ${eleccar.carEff}; // 전기차 연비
                var eleCarCo2 = ${eleccar.carCo2}; // 전기차 연비
            </c:if>
        </c:forEach>

        // 각 루틴에 대해 차트를 생성
        var ctx = document.getElementById('fuelEfficiencyChart${routine.routineNo}').getContext('2d');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['내연기관', '전기차'], // X축 레이블
                datasets: [{
                    label: '연비 비교 (km/L)',
                    data: [gasCarEff || 0, eleCarEff || 0], // Y축 데이터 (연비)
                    backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)'], // 색상
                    borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 206, 86, 1)'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true // Y축 0부터 시작
                    }
                }
            }
        });
        var ctx = document.getElementById('fuelCo2Chart${routine.routineNo}').getContext('2d');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['내연기관', '전기차'], // X축 레이블
                datasets: [{
                    label: '탄소배출량',
                    data: [gasCarCo2 || 0, eleCarCo2 || 0], // Y축 데이터 (연비)
                    backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)'], // 색상
                    borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 206, 86, 1)'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true // Y축 0부터 시작
                    }
                }
            }
        });

    </c:forEach>
});
</script>

	
	</body>
	
	</html>
	
