<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Routine</title>
<!-- 프레임 워크 jquery and bootStrap-->
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<link
	href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
	rel="stylesheet"
	integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
	crossorigin="anonymous">
<script
	src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
	integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
	crossorigin="anonymous"></script>
<link
	href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css"
	rel="stylesheet">

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
.headcss {
	box-shadow: 0px 5px 0px 0px #d6edff;
}

.btn-primary {
	background-color: #50B0FF;
	border: none;
}

.btn-primary:hover {
	background-color: #37a1f8;
}

.btn.responsive-text {
	font-size: calc(0.8rem + 0.4vw);
	font-weight: 600;
	/* 화면 너비에 비례한 폰트 크기 */
}

.responsive-text {
	font-size: calc(1rem + 0.5vw);
	/* 화면 너비에 비례한 폰트 크기 */
}

.responsive-subtext {
	font-size: calc(1rem + 0.5vw);
	font-weight: 600;
	color: #604616;
	/* 화면 너비에 비례한 폰트 크기 */
}

.responsive-tabletext {
	font-size: calc(0.6rem + 0.5vw);
}

.responsive-input {
	font-size: calc(1rem + 0.5vw);
	height: 7vh;
	/* 화면 너비에 비례한 폰트 크기 */
}

.re_logo {
	font-size: calc(2.5rem + 0.5vw);
	/* 화면 너비에 비례한 폰트 크기 */
	font-weight: 1000;
}

.re_sm_logo {
	font-size: calc(1rem + 0.5vw);
	/* 화면 너비에 비례한 폰트 크기 */
	font-weight: 600;
	color: #828282;
}

.re_exp {
	font-size: calc(1rem + 0.5vw);
	/* 화면 너비에 비례한 폰트 크기 */
	font-weight: 1000;
	text-align: center;
}

.container-sm {
	height: 100%;
}

html, body {
	height: 100%;
}

body {
	display: flex;
	justify-content: center;
	background-color: #B7B7B7;
}

.cont:-webkit-scrollbar {
	display: none;
}

.cont {
	background-color: white;
	width: 768px;
	height: 100%;
	box-shadow: 0 5px 8px rgba(57, 57, 57, 0.16), 0 5px 8px
		rgba(57, 57, 57, 0.16);
	-ms-overflow-style: none;
	/* 인터넷 익스플로러 */
	scrollbar-width: none;
	/* 파이어폭스 */
}

.hidden {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.liststyle {
	background-color: #d6edff;
	border-radius: 10px;
	cursor: pointer;
	transition-duration: 0.2s;
}

.liststyle:hover {
	transform: scale(0.99);
}

.img-size {
	width: 100%;
}
</style>

</head>

<body>

	<div class="cont p-3 overflow-y-auto">

		<div class="headcss p-3 mb-4">
			<div>
				<!-- 제목 -->
				<span><span class="re_logo" style="color: #FFD050;">e</span>
					<span class="re_logo" style="color: #50B0FF;">Motion</span></span> <span
					class="re_sm_logo"> 루틴</span>
			</div>
		</div>
		<div class="maincss px-2 d-flex justify-content-end">
			<!-- 버튼 -->
			<button class=" btn btn-primary responsive-text p-2"
				onclick="location.href='${pageContext.request.contextPath}/routineDetail'">+
				루틴 추가</button>
		</div>

		<!--전기차 테이블-->
		<div class="maincss p-2">
			<c:if test="${not empty routineList}">
				<c:forEach var="routine" items="${routineList}">
					<div class="fs-4 mb-3 ">
						<div class="d-flex justify-content-between liststyle py-3 px-3 "
							data-bs-toggle="modal"
							data-bs-target="#exampleModal${routine.routineNo}">
							<span>${routine.rouTitle}</span> <span>(${routine.rouDetail})</span>
							<span>(${routine.createDt})</span>
						</div>

					</div>



					<div class="modal fade" id="exampleModal${routine.routineNo}"
						tabindex="-1" aria-labelledby="exampleModalLabel"
						aria-hidden="true">
						<div class="modal-dialog modal-md">
							<div class="modal-content p-4">
								<div class="maincss px-2">
									<div class="row d-flex justify-content-end my-2">
										<button type="button" class="btn-close align-self-center"
											data-bs-dismiss="modal" aria-label="Close"></button>
									</div>
									<div class="row d-flex align-items-stretch text-align">
										<h2>${sessionScope.login.email}의 루틴</h2>
										<input type="hidden" name="email"
											value="${sessionScope.login.email}"> 
										<span>${routine.rouTitle} (${routine.rouDetail})</span>
										<div>
										<div>${routine.rouDay} 일 운행</div>
										<div class="row">
										<div class="col">${routine.startLoc}</div>
										<div class="col">${routine.endLoc}</div>
										</div>
										
										<div>${routine.totalDis}km</div>
										<div>왕복 여부 : ${routine.roundTripYn}</div>
										</div>
										<div class="col p-3 ">
											<button class="btn btn-primary my-2 w-100">내연기관</button>
										</div>

										<div class="col p-3">
											<button class="btn btn-primary my-2 w-100">전기차</button>
										</div>
										<div id="routine-info-${routine.routineNo}"></div>
										
										<canvas id="fuelEfficiencyChart${routine.routineNo}"
											width="400" height="200"></canvas>
										<canvas id="fuelCo2Chart${routine.routineNo}" width="400"
											height="200"></canvas>
										<button class="btn btn-warning w-100 mb-2"
											style="color: white;"
											onclick="location.href='${pageContext.request.contextPath}/routineDetailRewrite?routineNo=${routine.routineNo}'">수정</button>
										<!-- 모달 수정을 위한 재출 폼 -->
									</div>
								</div>
							</div>
						</div>
					</div>

				</c:forEach>

			</c:if>

			<c:if test="${empty routineList}">
				<li class="liststyle fs-4 my-2 p-2"><span>루틴이없습니다</span></li>
			</c:if>

		</div>


	</div>
	<script>
document.addEventListener("DOMContentLoaded", function () {
    // 루틴 목록을 순회하며 각 차량의 정보 출력
    <c:forEach var="routine" items="${routineList}">
        <c:forEach var="gascar" items="${GascarList}">
            <c:if test="${routine.routineNo == gascar.routineNo && routine.gasCar == gascar.carName}">
            	var gasCarImg = '${gascar.carImg}';
                var gasCarEff = parseFloat('${gascar.carEff}'); // 내연기관 차의 연비
                var gasCarCo2 = parseFloat('${gascar.carCo2}'); // 내연기관 차의 탄소배출량
                var gasCarBrand = '${gascar.carBrand}'; // 내연기관 차의 브랜드
                var gasCarName = '${gascar.carName}'; // 내연기관 차의 이름
                var gasCarCate = '${gascar.carCate}'; // 내연기관 차의 종류
                var gasCarCateDetail = '${gascar.carCateDetail}'; // 내연기관 차의 상세 종류
            </c:if>
        </c:forEach>

        <c:forEach var="eleccar" items="${EleccarList}">
            <c:if test="${routine.routineNo == eleccar.routineNo && routine.eleCar == eleccar.carname}">
            	var eleCarImg = '${eleccar.imgUrl}';
                var eleCarEff = parseFloat('${eleccar.carEff}'); // 전기차 연비
                var eleCarCo2 = parseFloat('${eleccar.carCo2}'); // 전기차 탄소배출량
                var eleCarBrand = '${eleccar.carbrand}'; // 전기차 브랜드
                var eleCarName = '${eleccar.carname}'; // 전기차 이름
                var eleCarPrice = '${eleccar.carprice}'; // 전기차 가격
                var eleCarCate = '${eleccar.carcate}'; // 전기차 종류
                var eleCarCateDetail = '${eleccar.carcatedetail}'; // 전기차 상세 종류

                // 연비와 탄소배출량의 차이를 계산
                var efficiencyDifference = Math.abs(gasCarEff - eleCarEff);
                var co2Difference = Math.abs(gasCarCo2 - eleCarCo2);

                // 해당 값을 HTML로 출력
                var routineElement = document.getElementById('routine-info-${routine.routineNo}');
                routineElement.innerHTML += 
                	'<div class="row">' +
	                    '<div class="col img-container">' +
		                    '<img class="img-size" src="' + gasCarImg + '">' +
		                '</div>' +
		                '<div class="col img-container">' +
		                    '<img class="img-size" src="/assets/img/elec_car_img/' + eleCarImg + '">' +
	                    '</div>' +
                    '</div>' +
                    '<div class="row">' +
                        '<div class="col">' + 
                            '<h3>' + gasCarBrand + ' ' + gasCarName + ' (내연기관)</h3>' +
                            '<p>연비: ' + gasCarEff + ' km/L</p>' +
                            '<p>탄소배출량: ' + gasCarCo2 + ' g/km</p>' +
                            '<p>차종: ' + gasCarCate + ' (' + gasCarCateDetail + ')</p>' +
                        '</div>' +
                        '<div class="col">' + 
                            '<h3>' + eleCarBrand + ' ' + eleCarName + ' (전기차)</h3>' +
                            '<p>연비: ' + eleCarEff + ' km/kWh</p>' +
                            '<p>탄소배출량: ' + eleCarCo2 + ' g/km</p>' +
                            '<p>차종: ' + eleCarCate + ' (' + eleCarCateDetail + ')</p>' +
                            '<p>가격: ' + eleCarPrice + '</p>' +
                        '</div>' +
                    '</div>' +
                    '<div class="row" >' +
                        '<p>연비 차이: ' + efficiencyDifference + ' km</p>' +
                        '<p>탄소배출량 차이: ' + co2Difference + ' g/km</p>' +
                    '</div>';
            </c:if>
        </c:forEach>
    </c:forEach>
});
</script>


	<script>
		document.addEventListener("DOMContentLoaded", function () {
		    // 루틴 목록을 순회하며 각 차트를 생성
		    <c:forEach var="routine" items="${routineList}">
		        <c:forEach var="gascar" items="${GascarList}">
		            <c:if test="${routine.routineNo == gascar.routineNo && routine.gasCar == gascar.carName}">
		                var gasCarEff = ${gascar.carEff}; // 내연기관 차의 연비
		                var gasCarCo2 = ${gascar.carCo2}; // 내연기관 차의 연비
		                
		            </c:if>
		        </c:forEach>
		
		        <c:forEach var="eleccar" items="${EleccarList}">
		            <c:if test="${routine.routineNo == eleccar.routineNo && routine.eleCar == eleccar.carname}">
		                var eleCarEff = ${eleccar.carEff}; // 전기차 연비
		                var eleCarCo2 = ${eleccar.carCo2}; // 전기차 연비
		            </c:if>
		        </c:forEach>
		
		        // 각 루틴에 대해 차트를 생성
		        var ctx = document.getElementById('fuelEfficiencyChart${routine.routineNo}').getContext('2d');
		
		        new Chart(ctx, {
		            type: 'bar',
		            data: {
		                labels: ['내연기관', '전기차'], // X축 레이블
		                datasets: [{
		                    label: '연비 비교 (km/L)',
		                    data: [gasCarEff || 0, eleCarEff || 0], // Y축 데이터 (연비)
		                    backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)'], // 색상
		                    borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 206, 86, 1)'],
		                    borderWidth: 1
		                }]
		            },
		            options: {
		                responsive: true,
		                scales: {
		                    y: {
		                        beginAtZero: true // Y축 0부터 시작
		                    }
		                }
		            }
		        });
		        var ctx = document.getElementById('fuelCo2Chart${routine.routineNo}').getContext('2d');
		
		        new Chart(ctx, {
		            type: 'bar',
		            data: {
		                labels: ['내연기관', '전기차'], // X축 레이블
		                datasets: [{
		                    label: '탄소배출량',
		                    data: [gasCarCo2 || 0, eleCarCo2 || 0], // Y축 데이터 (연비)
		                    backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)'], // 색상
		                    borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 206, 86, 1)'],
		                    borderWidth: 1
		                }]
		            },
		            options: {
		                responsive: true,
		                scales: {
		                    y: {
		                        beginAtZero: true // Y축 0부터 시작
		                    }
		                }
		            }
		        });
		
		    </c:forEach>
		});
	
		</script>


</body>

</html>

