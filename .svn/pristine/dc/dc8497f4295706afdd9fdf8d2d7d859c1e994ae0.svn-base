<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>쪽지 관리</title>
<!-- 부트스트랩 CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<style>
    .message-table th, .message-table td {
        vertical-align: middle;
        text-align: center;
    }
    .message-table input[type="checkbox"] {
        margin: 0 auto;
        display: block;
    }
.unread {
    background-color: #dbe3eb; /* 읽지 않은 쪽지의 배경색 */
}

.read {
    background-color: #ffffff; /* 읽은 쪽지의 배경색 */
}

    .button-group {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 1.5rem;
    }
</style>
</head>
<body>
<div class="container my-5">
    <h1 class="mb-3">쪽지 관리</h1>

    <!-- 탭 -->
<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link ${tab == 'received' ? 'active' : ''}" href="/messagesViewDo?receiverEmail=${sessionScope.login.email}&tab=received">받은 쪽지</a>
    </li>
    <li class="nav-item">
        <a class="nav-link ${tab == 'sent' ? 'active' : ''}" href="/sentMessagesViewDo?senderEmail=${sessionScope.login.email}&tab=sent">보낸 쪽지</a>
    </li>
</ul>


    <c:if test="${tab == 'received'}">
    <table class="table table-hover message-table align-middle bg-white">
        <thead class="table-light">
            <tr>
                <th style="width:5%"><input type="checkbox" id="selectAll" /></th>
                <th style="width:10%">확인</th>
                <th style="width:25%">보내는 사람</th>
                <th style="width:40%">내용</th>
                <th style="width:20%">날짜</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="message" items="${messages}">
<tr class="${message.msgRead == 'Y' ? '' : 'unread'}" data-message-id="${message.msgNo}">
    <td><input type="checkbox" class="message-checkbox" /></td>
    <td>
        <i class="bi ${message.msgRead == 'Y' ? 'bi-envelope-open text-secondary' : 'bi-envelope-fill text-primary'}"></i>
    </td>
    <td>
        ${message.senderNickname}<br>(${message.senderEmail})
    </td>
    <td class="text-center">
        <a href="#" class="text-decoration-none message-link" data-bs-toggle="modal" data-bs-target="#messageModal"
           data-tab="received"
           data-sender-email="${message.senderEmail}"
           data-nickname="${message.senderNickname}"
           data-message-content="${message.msgContent}"
           data-send-date="<fmt:formatDate value='${message.msgSendDate}' pattern='yyyy-MM-dd HH:mm' />"
           data-message-id="${message.msgNo}">
            ${message.msgContent}
        </a>
    </td>
    <td><fmt:formatDate value="${message.msgSendDate}" pattern="yyyy-MM-dd HH:mm" /></td>
</tr>

                
            </c:forEach>
        </tbody>
    </table>
</c:if>

<c:if test="${tab == 'sent'}">
    <table class="table table-hover message-table align-middle bg-white">
        <thead class="table-light">
            <tr>
                <th style="width:5%"><input type="checkbox" id="selectAll" /></th>
                <th style="width:10%">확인</th>
                <th style="width:25%">받는 사람</th>
                <th style="width:40%">내용</th>
                <th style="width:20%">날짜</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="message" items="${sentMessages}">
<tr class="message-row" data-message-id="${message.msgNo}">
                    <td><input type="checkbox" class="message-checkbox" /></td>
                                        <td><i class="bi ${message.msgRead == 'Y' ? 'bi-envelope-open text-secondary' : 'bi-envelope-fill text-primary'}"></i></td>
<td>${message.receiverNickname}<br> (${message.receiverEmail})</td>
<td class="text-center">
<a href="#" class="text-decoration-none" data-bs-toggle="modal" data-bs-target="#messageModal"
   data-tab="sent"
   data-receiver-email="${message.receiverEmail}"
   data-nickname="${message.receiverNickname}"
   data-message-content="${message.msgContent}"
   data-send-date="<fmt:formatDate value='${message.msgSendDate}' pattern='yyyy-MM-dd HH:mm' />">
    ${message.msgContent}
</a>
</td>
                    <td><fmt:formatDate value="${message.msgSendDate}" pattern="yyyy-MM-dd HH:mm" /></td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
</c:if>

    <!-- 버튼 그룹 -->
    <div class="d-flex justify-content-end gap-2 mt-3">
        <!-- 쪽지보내기 버튼 -->
<button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#newMessageModal">
    <i class="bi bi-pencil"></i> 쪽지보내기
</button>
<c:if test="${tab == 'received'}">
    <button class="btn btn-danger" onclick="deleteSelectedMessages('receiver')">
        <i class="bi bi-trash"></i> 삭제
    </button>
</c:if>
<c:if test="${tab == 'sent'}">
    <button class="btn btn-danger" onclick="deleteSelectedMessages('sender')">
        <i class="bi bi-trash"></i> 삭제
    </button>
</c:if>


<!-- 쪽지 보내기 모달 -->
<div class="modal fade" id="newMessageModal" tabindex="-1" aria-labelledby="newMessageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newMessageModalLabel">쪽지 보내기</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 쪽지 보내기 폼 -->
                <form action="${pageContext.request.contextPath}/sendMessageDo" method="post">
                    <div class="mb-3">
                        <label for="receiverEmail" class="form-label">받는 사람</label>
                        <input type="email" class="form-control" id="receiverEmail" name="receiverEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="msgContent" class="form-label">내용</label>
                        <textarea class="form-control" id="msgContent" name="msgContent" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">보내기</button>
                </form>
            </div>
        </div>
    </div>
</div>
        

    </div>
</div>

<!-- 모달: 쪽지 상세 내용 -->
<div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageModalLabel">쪽지 내용</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
<div class="modal-body">
    <p id="senderInfo" style="display: none;"><strong>보내는 사람:</strong> <span id="messageSenderNickname"></span> (<span id="messageSender"></span>)</p>
    <p id="receiverInfo" style="display: none;"><strong>받는 사람:</strong> <span id="messageReceiverNickname"></span> (<span id="messageReceiver"></span>)</p>
    <p><strong>보낸 날짜:</strong> <span id="messageDate"></span></p>
    <hr>
    <p id="messageContent"></p>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-primary" id="actionButton" data-bs-toggle="modal" data-bs-target="#newMessageModal">
        <!-- 텍스트는 JavaScript에서 설정 -->
    </button>
</div>
        </div>
    </div>
</div>




<!-- 모달: 쪽지 보내기 -->
<div class="modal fade" id="newMessageModal" tabindex="-1" aria-labelledby="newMessageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newMessageModalLabel">쪽지 보내기</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="${pageContext.request.contextPath}/sendMessageDo" method="post">
                    <div class="mb-3">
                        <label for="receiverEmail" class="form-label">받는 사람</label>
                        <input type="email" class="form-control" id="receiverEmail" name="receiverEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="msgContent" class="form-label">내용</label>
                        <textarea class="form-control" id="msgContent" name="msgContent" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">보내기</button>
                </form>
            </div>
        </div>
    </div>
</div>



<!-- 부트스트랩 JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
//전체 선택 기능
document.getElementById("selectAll").addEventListener("change", function () {
    const isChecked = this.checked;
    document.querySelectorAll(".message-checkbox").forEach(checkbox => {
        checkbox.checked = isChecked;
    });
});


function deleteSelectedMessages(userType) {
    const selectedMessages = Array.from(document.querySelectorAll(".message-checkbox:checked"))
        .map(el => el.closest("tr").dataset.messageId);
    
    if (selectedMessages.length === 0) {
        alert("삭제할 쪽지를 선택하세요.");
        return;
    }

    const isConfirmed = confirm("선택한 쪽지를 삭제하시겠습니까?");
    if (!isConfirmed) return;

    const loginEmail = sessionStorage.getItem("loginEmail") || "${sessionScope.login.email}";

    $.ajax({
        url: '/deleteMessageDo',
        type: 'POST',
        traditional: true, // 배열 전송
        data: { msgNos: selectedMessages, userType: userType },
        success: function (response) {
            alert("선택한 쪽지가 삭제되었습니다.");

            if (userType === 'receiver') {
                location.href = `/messagesViewDo?receiverEmail=${loginEmail}`;
            } else if (userType === 'sender') {
                location.href = `/sentMessagesViewDo?senderEmail=${loginEmail}`;
            }
        },
        error: function (xhr) {
            // 서버에서 오류 응답
            if (xhr.responseJSON && xhr.responseJSON.error) {
                alert(xhr.responseJSON.error);
            } else {
                alert("쪽지 삭제 중 오류가 발생했습니다.");
            }
        }
    });
}

    // 모달에서 데이터를 채우는 부분
$('#messageModal').on('show.bs.modal', function (event) {
    var button = $(event.relatedTarget); // 클릭된 버튼
    var tab = button.data('tab'); // 받은 편지함인지 보낸 편지함인지 구분
    var senderEmail = button.data('sender-email'); // 보내는 사람 이메일
    var receiverEmail = button.data('receiver-email'); // 받는 사람 이메일
    var nickname = button.data('nickname'); // 닉네임
    var messageContent = button.data('message-content'); // 쪽지 내용
    var sendDate = button.data('send-date'); // 보낸 날짜

    var modal = $(this);

    // 초기화
    modal.find('#senderInfo').hide();
    modal.find('#receiverInfo').hide();
    modal.find('#actionButton').text(''); // 버튼 텍스트 초기화

    // 받은 편지함
    if (tab === 'received') {
        modal.find('#senderInfo').show();
        modal.find('#messageSender').text(senderEmail || '-');
        modal.find('#messageSenderNickname').text(nickname || '-');
        modal.find('#actionButton').text('답장').data('action', 'reply').data('target-email', senderEmail);
    }
    // 보낸 편지함
    else if (tab === 'sent') {
        modal.find('#receiverInfo').show();
        modal.find('#messageReceiver').text(receiverEmail || '-');
        modal.find('#messageReceiverNickname').text(nickname || '-');
        modal.find('#actionButton').text('전달').data('action', 'forward').data('target-email', receiverEmail);
    }

    // 공통 설정
    modal.find('#messageContent').text(messageContent || '-');
    modal.find('#messageDate').text(sendDate || '-');
});

// 버튼 클릭 이벤트
$('#actionButton').on('click', function () {
    var action = $(this).data('action'); // 'reply' 또는 'forward'
    var targetEmail = $(this).data('target-email'); // 이메일

    // 모달에서 이메일 설정
    if (action === 'reply' || action === 'forward') {
        $('#newMessageModal').find('#receiverEmail').val(targetEmail);
    }
});

// 폼 유효성 
$('#newMessageModal form').on('submit', function (e) {
    e.preventDefault(); // 기본 폼 제출 방지

    const receiverEmail = $('#receiverEmail').val().trim(); // 입력된 받는 사람 이메일
    const loginEmail = '${sessionScope.login.email}'; // 현재 로그인한 사용자 이메일

    // 자기 자신에게 보내기 방지
    if (receiverEmail === loginEmail) {
        alert('자기 자신에게 쪽지를 보낼 수 없습니다.');
        $('#receiverEmail').val(''); // 입력 초기화
        $('#msgContent').val('');
        return false;
    }

    // 이메일 존재 여부 확인
    $.ajax({
        url: '/emailCheck',
        type: 'GET',
        data: { email: receiverEmail },
        success: function (response) {
            if (response === 0) { // 이메일이 존재하지 않음
                alert('존재하지 않는 이메일입니다.');
                $('#receiverEmail').val(''); // 입력 초기화
                $('#msgContent').val('');
                return false;
            }

            // 이메일이 유효하면 폼 제출
            $('#newMessageModal form').off('submit').submit();
        },
        error: function () {
            alert('이메일 검증 중 오류가 발생했습니다.');
        }
    });
});



    // 답장하기 버튼 클릭 시, 해당 이메일로 답장 폼 열기
$('#replyButton').on('click', function () {
    var receiverEmail = $(this).data('receiver-email'); // 모달에서 receiverEmail 가져오기
    $('#newMessageModal').find('#receiverEmail').val(receiverEmail); // 답장 폼에 이메일 설정
});
$('.message-link').on('click', function () {
    var messageId = $(this).data('message-id'); // 메시지 ID 가져오기
    var row = $(this).closest('tr'); // 현재 행

    // AJAX 요청으로 읽음 상태 업데이트
    $.ajax({
        url: '/updateMessageReadStatus', // 서버에서 읽음 상태를 업데이트하는 URL
        type: 'POST',
        data: { messageId: messageId },
        success: function () {
            // 읽음 상태 UI 업데이트
            row.removeClass('unread').addClass('read'); // 배경색 변경
            row.find('i').removeClass('bi-envelope-fill text-primary')
                         .addClass('bi-envelope-open text-secondary'); // 아이콘 변경
        },
        error: function () {
            alert('메시지 읽음 상태를 업데이트하는 데 실패했습니다.');
        }
    });
});
</script>

</body>
</html>
