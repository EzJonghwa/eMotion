const popoverTriggerList = document.querySelectorAll('[data-bs-toggle="popover"]')
const popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl))

$(document).ready(function(){
    $(".card").each(function(){
        // 현재 카드의 imgurl 값 가져오기
        const imgUrl = $(this).find('input[name="imgUrl"]').val();
        //console.log("imgUrl:", imgUrl);

        // 이미지 경로 생성
        const encodedPath = imgUrl;
        const decodedPath = decodeURIComponent(encodedPath);

        // 현재 카드의 img 태그에 경로 설정
        $(this).find("img").attr("src", decodedPath);
        //console.log("Decoded Path:", decodedPath);
    });
    
    $("#listContainer").on("click", ".btn-group:nth-child(1) .dropdown-item", function (event) {
        event.preventDefault(); // 기본 동작(링크 이동) 방지
        
        // 클릭된 항목의 텍스트 가져오기
        const selectedValue = $(this).text();

        // 현재 클릭된 모달의 ID 가져오기
        const localBox = $(this).closest("[id^='localBox']");
        const rownum = localBox.attr("id").split("-")[1];
        let resultContainer = $("#resultContainer-"+rownum);
        resultContainer.empty();
        resultContainer.append("다른 지역의 보조금과 지원금TO현황을 확인해보세요!");

        // 클릭된 항목과 관련된 버튼만 변경
        $(this).closest(".btn-group").find(".btn.dropdown-toggle").text(selectedValue);

        // 첫 번째 드롭다운 버튼 업데이트
        localBox.find(`#firstDropdownBtn-${rownum}`).text(selectedValue);

        // 두 번째 드롭다운 초기화
        localBox.find(`#secondDropdownBtn-${rownum}`).text("선택");

        
        // AJAX 요청
        $.ajax({
            url: '/getSelect/otherLocal', // 서버에서 처리할 URL
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ selectedValue: selectedValue }), // 전송할 데이터
            success: function (response) {
                // 서버 응답 성공 처리
                //console.log("응답 성공:", response);

                // 두 번째 드롭다운 갱신
            	const secondDropdown = localBox.find(`#secondDropdownBtn-${rownum}`).siblings(".dropdown-menu");
                updateSecondDropdown(secondDropdown, response.secondLocal);
            },
            error: function (xhr, status, error) {
                // 서버 응답 실패 처리
                console.error("응답 실패:", status, error);
            }
        });
    });

    $("#listContainer").on("click", ".btn-group:nth-child(2) .dropdown-item", function (event) {
        event.preventDefault(); // 기본 동작(링크 이동) 방지

        // 클릭된 항목의 텍스트 가져오기
        const selectedValue = $(this).text();

        // 두 번째 드롭다운 버튼의 텍스트 변경
        $(this).closest(".btn-group").find(".btn.dropdown-toggle").text(selectedValue);
    });
    
    // 조회 버튼 클릭 이벤트
    $("#listContainer").on("click", "[id^='eachLocalSearchBtn']", function () {
        const localBox = $(this).closest("[id^='localBox']");
        const rownum = localBox.attr("id").split("-")[1];

        const firstSelectedValue = localBox.find(`#firstDropdownBtn-${rownum}`).text().trim();
        const secondSelectedValue = localBox.find(`#secondDropdownBtn-${rownum}`).text().trim();
        
        const thirdSelectedValue = $("#exampleModalLabel").text().trim();
        const forthSelectedValue = $("#kindOfCar").text().trim();
        // 선택값이 없을 경우 경고
        if (firstSelectedValue === "선택" || secondSelectedValue === "선택") {
            alert("두 개의 드롭다운에서 모두 값을 선택해주세요.");
            return;
        }

        // AJAX 요청으로 데이터 전송
        $.ajax({
            url: '/getSelect/otherLocal', // 서버에서 처리할 URL
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                firstValue: firstSelectedValue,
                secondValue: secondSelectedValue,
                thirdValue: thirdSelectedValue,
                forthValue: forthSelectedValue
            }),
            success: function (response) {
                // 서버 응답 성공 처리
            	//console.log("1번", response.selectedLocInfo);
                //console.log("응답 성공:", response);
            	let resultContainer = localBox.find(`#resultContainer-${rownum}`);
                displayResults(resultContainer, response.selectedLocInfo);
                
            },
            error: function (xhr, status, error) {
                // 서버 응답 실패 처리
                console.error("응답 실패:", status, error);
                alert("데이터를 가져오는 데 실패했습니다.");
            }
        });
    });
    
    $("#listContainer").on("hide.bs.modal", ".modal", function () {
        const localBox = $(this).find("[id^='localBox']");
        
        // 첫 번째 드롭다운 버튼 초기화
        localBox.find(".btn-group:nth-child(1) .btn.dropdown-toggle").text("지역선택");
        
        // 두 번째 드롭다운 버튼 초기화
        localBox.find(".btn-group:nth-child(2) .btn.dropdown-toggle").text("선택");
        
        // 결과 컨테이너 초기화
        localBox.find("[id^='resultContainer']").html("다른 지역의 보조금과 지원금 TO 현황을 확인해보세요!");
    });
    
    
    // 두 번째 드롭다운 갱신 함수
    function updateSecondDropdown(dropdownElement, items) {

    	dropdownElement.empty();
        // 새로운 항목 추가
        items.forEach(function (item) {
            const li = `<li><a class="dropdown-item" href="#">${item.addrDetail}</a></li>`;
            dropdownElement.append(li);
        });
    }
    
    // 조회 결과를 표시하는 함수
    function displayResults(obj,data) {
        obj.empty(); // 기존 내용 제거
        //console.log("2번",data);
        if (data[0]) {
        	const info = data[0];
        	//console.log(info.carCate);
            const resultHtml = `<p class="card-text">지방비보조금 | 잔여대수</p>
                				<p class="card-text">${info.locSubsidy}만원 | ${info.effLeftAll}/${info.effAllAll}대
                				<button id="other-TO-popover" class="TO-btn" data-bs-toggle="popover" data-bs-trigger="focus" title="보조금 상세 TO (${info.selectedAddr })">
					               TO상세
					            </button>
				                </p>`
            obj.append(resultHtml);
            
            const popoverContent = (() => {
                if (info.carCate === '승용') {
                    return `
                        전체: ${info.effLeftAll}/${info.effAllAll}<br>
                        우선: ${info.effLeftFirst}/${info.effAllFirst}<br>
                        법인: ${info.effLeftCorporation}/${info.effAllCorporation}<br>
                        택시: ${info.effLeftTaxi}/${info.effAllTaxi}<br>
                        일반: ${info.effLeftCommon}/${info.effAllCommon}
                    `;
                } else if (info.carCate === '화물') {
                    return `
                        전체: ${info.effLeftAll}/${info.effAllAll}<br>
                        우선: ${info.effLeftFirst}/${info.effAllFirst}<br>
                        중소: ${info.effLeftSmallCompany}/${info.effAllSmallCompany}<br>
                        법인: ${info.effLeftCorporation}/${info.effAllCorporation}<br>
                        택배: ${info.effLeftDelivery}/${info.effAllDelivery}<br>
                        일반: ${info.effLeftCommon}/${info.effAllCommon}
                    `;
                } else if (info.carCate === '승합') {
                    return `
                        전체: ${info.effLeftAll}/${info.effAllAll}<br>
                        우선: ${info.effLeftFirst}/${info.effAllFirst}<br>
                        일반: ${info.effLeftCommon}/${info.effAllCommon}
                    `;
                } else if (info.carCate === '이륜차') {
                    return `
                        전체: ${info.effLeftAll}/${info.effAllAll}<br>
                        우선: ${info.effLeftFirst}/${info.effAllFirst}<br>
                        법인: ${info.effLeftCorporation}/${info.effAllCorporation}<br>
                        배달: ${info.effLeftDelivery}/${info.effAllDelivery}<br>
                        일반: ${info.effLeftCommon}/${info.effAllCommon}
                    `;
                } else {
                    return '정보가 없습니다.';
                }
            })();
            
            const newPopoverTriggerList = document.querySelector("#other-TO-popover");
            if (newPopoverTriggerList) {
                // 팝오버 초기화
                new bootstrap.Popover(newPopoverTriggerList, {
                    html: true,
                    content: popoverContent,
                    sanitize: false
                });
            }

        } else {
        	obj.html("<p>결과가 없습니다.</p>");
        }
    }
    
    
});