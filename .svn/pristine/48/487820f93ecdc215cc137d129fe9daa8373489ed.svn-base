package com.eMotion.team.recommend.controller;

import java.util.ArrayList;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

import com.eMotion.team.recommend.service.FilterServiceImpl;
import com.eMotion.team.recommend.service.RecommendServiceImpl;
import com.eMotion.team.recommend.vo.FilterVO;
import com.eMotion.team.recommend.vo.RecommendVO;
import com.eMotion.team.recommend.vo.SearchVO;


@Controller
public class RecommendController {

	@Autowired
	RecommendServiceImpl recoService;
	@Autowired
	FilterServiceImpl filterService;
	
	@GetMapping("/filter")
	public String showCate(Model model, @ModelAttribute("searchVO") SearchVO searchVO) {
		ArrayList<FilterVO> passCateVO = filterService.getPassengerCate();
		ArrayList<FilterVO> freiCateVO = filterService.getFreightCate();
		ArrayList<FilterVO> vansCateVO = filterService.getVansCate();
		ArrayList<FilterVO> motoCateVO = filterService.getMotorsCate();
		ArrayList<FilterVO> brandVO = filterService.getCarBrand(searchVO);

		model.addAttribute("passCate", passCateVO);
		model.addAttribute("freiCate", freiCateVO);
		model.addAttribute("vansCate", vansCateVO);
		model.addAttribute("motoCate", motoCateVO);
		model.addAttribute("carBrand", brandVO);
		return "recommend/filterView";
	}
	
	//최종선택완료 후 불러오는 차량데이터
	@PostMapping("/getSelect")
	public String getSelect(@RequestParam(required=false) ArrayList<String> carCateDetail,
							@ModelAttribute("searchVO") SearchVO searchVO) {
		System.out.println(searchVO);
        ArrayList<RecommendVO> carList = recoService.getFilteredList(searchVO);
        System.out.println(carList);
        int resultCount = recoService.getCount(searchVO);
        System.out.println(resultCount);
        return "/recommend/filterView";
	}
	
	//카테고리 선택 시 건 수가 실시간으로 반영되도록
	@PostMapping("/filter/updateSelected")
    public ResponseEntity<String> updateSelected(@RequestBody Map<String, ArrayList<String>> selectedData,
    											 @ModelAttribute("searchVO") SearchVO searchVO, Model model) {
        ArrayList<String> selectedCates = selectedData.get("selectedCates");
        ArrayList<String> selectedBrands = selectedData.get("selectedBrands");
        System.out.println("선택된 카테고리: " + selectedCates);
        System.out.println("선택된 브랜드: " + selectedBrands);
        searchVO.setCarCateDetail(selectedCates);
        searchVO.setCarBrand(selectedBrands);
        int nowCount = recoService.getCount(searchVO);
        System.out.println(nowCount);
        model.addAttribute("nowCount", nowCount);
        model.addAttribute("selectedCate", selectedCates);
        model.addAttribute("selectedBr", selectedBrands);
        
        return ResponseEntity.ok("Updated successfully");
    }
	
}